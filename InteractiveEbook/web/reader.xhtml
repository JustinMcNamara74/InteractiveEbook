<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>WheeReader - 4J Interactive</title>
        
        <link rel="stylesheet" type="text/css" href="css/chaptertext.css" />
        <script language="javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
        
    </h:head>
    <h:body style="padding-top: 60px;">
        <ui:insert name="header" >
            <ui:include src="/template/navbar.xhtml" />
	</ui:insert>
    
            <b:modal id="quizModal" title="Quiz Question">

                <div id="quizText">
                    
                </div>
                <div id="quizLoadAnim"><img src="images/ajax-loader.gif"/></div>
                
                <div class="container-fluid">
                    <form class="form-horizontal" role="form" id="quizForm">
                        <div id="quizAnswers" class="form-group">
                            
                        </div>
                    </form>
                </div>
                <f:facet name="footer">
                    <div id="quizResult" class="container-fluid" style="text-align: center;">
                        
                    </div>
                    <b:button id="quizCancelButton" value="Close" dismiss="modal" onclick="return false;"/>
                    <b:button id="quizSubmitButton" value="Submit Answer" look="primary" onclick="submitQuestion(); return false;"/>
                </f:facet>
            </b:modal>
        
        
        <script language="javascript">
            var questionCache = {};
            var currentQuestion = null;
            
            var animateLoaderGuy = function() {
                $("#quizLoadAnim").removeAttr("style");
                $("#quizLoadAnim").offset({
                    left: $("#quizText").offset().left,
                    top: $("#quizText").offset().top
                });

                $("#quizLoadAnim").animate({
                    left: "+=550"
                }, 4000 , animateLoaderGuy);
            };
            
            var makeQuizAnswer = function(answer, answerText, answerType) {
                console.log("MAKEY: "+answerType);
                
                return '<div class="'+answerType+' container-fluid" id="quizAnswerContainer'+answer+'">\
                                <label>\
                                    <input type="'+answerType+'" name="answer" id="quizAnswerBox'+answer+'" value="'+answer+'" onclick="answerClicked();"/>\
                                    '+answerText+'\
                                </label>\
                            </div>\n\
';
            }
            
            var getSelectedAnswers = function(prefix) {
                var selected = [];
                
                if(!prefix)
                    prefix = "";
                
                $('#quizAnswers input:checked').each(function() {
                    selected.push(prefix + $(this).val());
                });
                
                return selected;
            }
            
            var answerClicked = function() {
                var selected = getSelectedAnswers();
                $("#quizResult").hide();
                
                $("#quizModal").css({
                    "background-color" : "rgba(0, 0, 0, 0)"
                });
                
                $("#quizSubmitButton").show();
                
                if(selected.length > 0) {
                    $("#quizSubmitButton").removeClass("disabled");
                }
                else {
                    $("#quizSubmitButton").addClass("disabled");
                }
            }
            
            var submitQuestion = function() {
                
                var selected = getSelectedAnswers("answer=");
                
                if(selected.length > 0 &amp;&amp; currentQuestion) {
                    
                    var restURL = "rest/quiz/submit/"+currentQuestion.chapter+"/"+currentQuestion.number+"?"+selected.join("&amp;");
                    
                    $.get( restURL , function( questionResult ) {
                        if(questionResult !== null) {
                            if(questionResult.isCorrect) {
                                $("#quizResult").html('<h1 style="color: green;"><img src="images/wow-dude-icon.png"/> CORRECT! <img src="images/wow-dude-icon.png"/></h1>');
                            }
                            else {
                                $("#quizResult").html('<h1 style="color: red;"><img src="images/sincere-sadness-icon.png"/>INCORRECT <img src="images/sincere-sadness-icon.png"/></h1>');
                            }
                            
                            currentQuestion.userLastAnswers = getSelectedAnswers();
                            
                            $("#quizResult").slideDown("slow", function() {
                                if(questionResult.isCorrect) {
                                   
                                    $("#quizModal").css({
                                        "background-color" : "rgba( 123, 200, 123, 55)"
                                    });
                                    $("#quizSubmitButton").hide();
                                    
                                    $("#quizTrigger"+currentQuestion.chapter+"-"+currentQuestion.number).attr("class", "btn btn-success");
                                    $("#quizTrigger"+currentQuestion.chapter+"-"+currentQuestion.number).text("Correct! :)");
                                }
                                else {
                                    $("#quizModal").css({
                                        "background-color" : "rgba( 200, 123, 123, 55)"
                                    });
                                    
                                    $("#quizTrigger"+currentQuestion.chapter+"-"+currentQuestion.number).attr("class", "btn btn-danger");
                                    $("#quizTrigger"+currentQuestion.chapter+"-"+currentQuestion.number).text("Incorrect! :(");
                                }
                            });
                        }

                      });
                }

            }
            
            var setQuizFields = function(quizData) {
                $( "#quizText" ).html( quizData.questionText );
                $( "#quizText" ).show();
                
                $("#quizLoadAnim").stop();
                $("#quizLoadAnim").hide();
                
                $("#quizAnswers").html("");
                $("#quizAnswers").show();

                $("#quizModal_Label").text("Quiz Question "+quizData.chapter+"."+quizData.number);

                quizData.answers.forEach(function(answer) {
                    $("#quizAnswers").append(makeQuizAnswer(answer.answer, answer.answerText, (quizData.multipleChoice ? "checkbox" : "radio")));
                });
                
                currentQuestion = quizData;
                
                quizData.userLastAnswers.forEach(function(ans) {
                    console.log("#quizAnswerBox"+ans);
                    
                    $("#quizAnswerBox"+ans).click();
                });
                
                console.log(quizData);
            }
            
            var loadQuizQuestion = function(chapter, number) {
                var qID = chapter+"."+number;
                
                $("#quizResult").hide();
                
                $("#quizSubmitButton").show();
                $("#quizSubmitButton").addClass("disabled");
                
                $("#quizModal").css({
                    "background-color" : "rgba(0, 0, 0, 0)"
                });
                
                $( "#quizText" ).hide();
                
                if(!questionCache[qID]) {
                    
                    
                    $("#quizAnswers").hide();
                    $("#quizLoadAnim").show();
                    
                    $("#quizModal_Label").text("Quiz Question Loading...");
                
                    $("#quizLoadAnim").stop();
                    animateLoaderGuy();
                    
                    $.get( "rest/quiz/question/"+chapter+"/"+number, function( data ) {
                        if(data !== null) {
                            questionCache[qID] = data;
                            setQuizFields(data);
                        }

                      });
                }
                else {
                    setQuizFields(questionCache[qID]);
                }
                
            };
        </script>
        

        <table width="100%" height="100%">
            <tr height="100%">
                <td width="25%">
                    <div id="chapterFrame" align="left" style="overflow: auto;">
                        <b:panel look="primary">
                            <f:facet name="heading">Chapters</f:facet>   
                            <b:listLinks>
                                <ui:repeat value="#{readerBean.chapterList}" var="chapter">
                                    <b:navLink href="?chapter=#{chapter.number}" value="#{chapter.number} - #{chapter.title}" rendered="#{!(param['chapter'] == chapter.number)}"/>
                                    
                                    <b:panel rendered="#{(param['chapter'] == chapter.number)}">
                                        <b:navLink></b:navLink>
                                        <b:navLink header="#{chapter.number} - #{chapter.title}"/>
                                        <ui:repeat value="#{chapter.subsections}" var="subsection">
                                            <li>
                                                <a href="##{chapter.number}-#{subsection.number}">#{chapter.number}.#{subsection.number} - #{subsection.title}</a>
                                            </li>
                                        </ui:repeat>
                                        <b:navLink header="Programming Exercises"/>
                                        <ui:repeat value="#{chapter.exercises}" var="exercise" varStatus="exStatus">
                                            <li>
                                                <a href="#exercise#{chapter.number}-#{(exStatus.index+1)}">#{exercise}</a>
                                            </li>
                                        </ui:repeat>
                                        <b:navLink></b:navLink>
                                    </b:panel>
                                </ui:repeat>

                            </b:listLinks>
                         </b:panel>
                    </div>
                </td>
                
                <td width="75%" height="100%" >
                    <div id="chapterTextFrame" style="overflow: auto; position: relative;">
                        <h:panelGroup rendered="#{userBean.loggedIn}">
                            <h:panelGroup rendered="#{(param['chapter'] == 5)}" style="height: 100%;">

                                <ui:include src="chapters/Chapter5-Better.xhtml"/>
                            </h:panelGroup>
                        </h:panelGroup>

                        <div id="nonChapterContent">
                            <h:panelGroup rendered="#{(param['chapter'] != null and !userBean.loggedIn)}" id="mustLoginGroup" style="text-align: center; height: 100%;">

                                    <h2>You must <a href="register.xhtml">register</a> or <a href="login.xhtml">login</a> before you can access this chapter.</h2>

                            </h:panelGroup>

                            <h:panelGroup rendered="#{param['chapter'] == null}" id="chapterImageGroup" style="margin-left: auto;">
                                <center><img src="images/intro10eComprehensive.jpg" style="margin-top: 200px;"/></center>
                            </h:panelGroup>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </h:body>
    <script language="javascript">
        
        var goToSubsection=function(subsectionUrl) {
            $("#textFrame").attr("src", subsectionUrl);
        };
        
        var resizeFrames = function() {
            $("#chapterFrame").height($(window).height() - 60);
            $("#chapterTextFrame").height($(window).height() - 60);
            
            $("#chapterTextFrame").position({ left: ($("#chapterFrame").width()+10), top: 60});
            
            $("#nonChapterContent").css({
                "margin-top": ($("#chapterTextFrame").height()/3 - $("#nonChapterContent").height()/2)+"px"
            });
            
        };
        
        $(window).load(function() {
            resizeFrames();
            
            $(".subSectionLink").attr("target","chapterTextFrame");
        });
        
        $( window ).resize(function() {
            resizeFrames();
          });
          
          
          //<![CDATA[

    var chapterContents = $("#chapterFrame");
    var marginBar = $("#margin");

    var createMarginImages = function(elemClass, imgSrc, offsetTop, offsetLeft) {
        $(elemClass).each(function() {
                var kp = $(this);
                
                // Create a keypoint img
                var kpImg = $("<img/>", {
                        src: imgSrc
                });
                
                kpImg.appendTo(marginBar);
                kpImg.css({"position" : "absolute"});
                
                kpImg.offset({
                        top: kp.offset().top-offsetTop,
                        left: chapterContents.width()+offsetLeft
                });
        });
    };

    var createMarginItems = function() {
        
        var lastTop = 0;
        // Loop through all elements with the class 'keyTerm'
        
        $(".keyTerm").each(function() {
                
                var ktSpan = $(this);
                
                var ktText = ktSpan.text();
                
                if(ktText === "") {
                        ktText = ktSpan.attr("value");
                }
                
                // Create a new div and place it in the margin
                var ktDiv = $("<div/>", {
                        text: ktText
                });
                
                ktDiv.appendTo(marginBar);
                ktDiv.css({"position" : "absolute"});
                
                // Set the position of the new div to match that of the span
                var offsetTop = ktSpan.offset().top+2;
                
                // Simple check for overlapping terms. Only supports two terms being
                // on the same line.
                if(offsetTop == lastTop) {
                        offsetTop += 15;        
                }
                
                ktDiv.offset({
                        top: offsetTop,
                        left: chapterContents.width()+5
                });
                
                lastTop = offsetTop;
        });

        createMarginImages(".keyPoint", "chapters/keypoint.png", 10, 75);
        createMarginImages(".checkpoint", "chapters/checkpoint.png", 0, 75);
        createMarginImages(".outputBox", "chapters/laptop.png", -10, 85);
        createMarginImages(".traceBox", "chapters/search-icon.png", -10, 85);
        createMarginImages(".videoNote", "chapters/video-icon.png", 0, 85);
    };

    createMarginItems();

    //]]>
    </script>
</html>

